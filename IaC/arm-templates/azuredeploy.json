{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "databaseName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new Azure SQL Database."
      }
    },
    "serverName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure SQL Server."
      }
    },
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The administrator login for the Azure SQL Server."
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The administrator login password for the Azure SQL Server."
      }
    },
    "cacheName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new Azure Cache for Redis."
      }
    },
    "cacheSize": {
      "type": "string",
      "defaultValue": "C0",
      "allowedValues": [
        "C0",
        "C1",
        "C2",
        "C3",
        "C4",
        "C5",
        "C6"
      ],
      "metadata": {
        "description": "The size of the Azure Cache for Redis."
      }
    },
    "skuFamily": {
      "type": "string",
      "defaultValue": "C",
      "allowedValues": [
        "C",
        "P"
      ],
      "metadata": {
        "description": "The SKU family of the Azure Cache for Redis."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "The SKU name of the Azure Cache for Redis."
      }
    },
    "VnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network."
      }
    },
    "VnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address prefix for the virtual network."
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new Azure Storage Account."
      }
    },
    "accountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Azure Storage Account."
      }
    },
    "accountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new Azure Cosmos DB account."
      }
    },
    "cosmosdatabaseName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new Cosmos database to be created."
      }
    },
    "containerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new container to be created."
      }
    },
    "partitionKeyPath": {
      "type": "string",
      "metadata": {
        "description": "The partition key path for the new container."
      }
    }
  },
  "variables": {
    "VnetName": "[parameters('VnetName')]",
    "VnetPrefix": "[parameters('VnetPrefix')]",
    "databaseCollation": "SQL_Latin1_General_CP1_CI_AS"
  },
  "resources": [
    {
      "comments": "Virtual Network (VNet)",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('VnetName')]",
      "apiVersion": "2022-07-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VnetPrefix')]"
          ]
        },
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "comments": "Azure SQL Server",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2022-11-01-preview",
      "name": "[parameters('serverName')]",
      "location": "[parameters('location')]",
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "version": "12.0",
        "minimalTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled",
        "restrictOutboundNetworkAccess": "Disabled"
      }
    },
    {
      "comments": "Azure SQL DB",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2022-11-01-preview",
      "name": "[concat(parameters('serverName'), '/', parameters('databaseName'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "collation": "[variables('databaseCollation')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
      ]
    },
    {
      "comments": "Azure Redis Cache",
      "type": "Microsoft.Cache/Redis",
      "apiVersion": "2023-05-01-preview",
      "name": "[parameters('cacheName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('skuName')]",
          "family": "[parameters('skuFamily')]"
        },
        "redisConfiguration": {
          "maxclients": "10000"
        },
        "enableNonSslPort": false,
        "redisVersion": "6.0",
        "minimumTlsVersion": "1.2",
        "shardCount": 1,
        "subnetId": null,
        "staticIp": null,
        "tenantSettings": null,
        "zones": null
      }
    },
    {
      "comments": "Azure Storage Account",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('accountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "comments": "Azure Cosmos DB",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[parameters('accountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        }
      },
      "resources": [
        {
          "comments": "Azure Cosmos DB Account",
          "type": "databases",
          "name": "[parameters('cosmosdatabaseName')]",
          "apiVersion": "2023-04-15",
          "dependsOn": [
            "[concat('Microsoft.DocumentDB/databaseAccounts/', parameters('accountName'))]"
          ],
          "properties": {
            "resource": {
              "id": "[parameters('cosmosdatabaseName')]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "databaseName": {
      "type": "string",
      "value": "[parameters('databaseName')]"
    },
    "cacheName": {
      "type": "string",
      "value": "[parameters('cacheName')]"
    },
    "cacheHostName": {
      "type": "string",
      "value": "[concat(parameters('cacheName'), '.redis.cache.windows.net')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "storageAccountConnectionString": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
    },
    "accountName": {
      "type": "string",
      "value": "[parameters('accountName')]"
    },
    "cosmosdatabaseName": {
      "type": "string",
      "value": "[parameters('cosmosdatabaseName')]"
    },
    "containerName": {
      "type": "string",
      "value": "[parameters('containerName')]"
    }
  }
}