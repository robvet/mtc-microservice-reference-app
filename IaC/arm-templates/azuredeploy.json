{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "databaseName": {
      "type": "string",
      "defaultValue": "microtunes-azsqldb",
      "metadata": {
        "description": "The name of the new Azure SQL Database."
      }
    },
    "serverName": {
      "type": "string",
      "defaultValue": "microtunes-azsqlserver",
      "metadata": {
        "description": "The name of the Azure SQL Server."
      }
    },
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The administrator login for the Azure SQL Server."
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The administrator login password for the Azure SQL Server."
      }
    },
    "cacheName": {
      "type": "string",
      "defaultValue": "microtunes-redis",
      "metadata": {
        "description": "The name of the new Azure Cache for Redis."
      }
    },
    "cacheCapacity": {
      "type": "int",
      "defaultValue": 0,
      "allowedValues": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "metadata": {
        "description": "The size of the Azure Cache for Redis."
      }
    },
    "cacheFamily": {
      "type": "string",
      "defaultValue": "C",
      "allowedValues": [
        "C",
        "P"
      ],
      "metadata": {
        "description": "The SKU family of the Azure Cache for Redis."
      }
    },
    "cacheSKU": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "The SKU name of the Azure Cache for Redis."
      }
    },
    "VnetName": {
      "type": "string",
      "defaultValue": "microtunes-vnet",
      "metadata": {
        "description": "The name of the virtual network."
      }
    },
    "VnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The address prefix for the virtual network."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "microtunesstorage",
      "metadata": {
        "description": "The name of the new Azure Storage Account."
      }
    },
    "accountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Azure Storage Account."
      }
    },
    "cosmosdbName": {
      "type": "string",
      "defaultValue": "microtunes-cosmosdb",
      "metadata": {
        "description": "The name of the new Azure Cosmos DB account."
      }
    },
    "cosmosdatabaseName": {
      "type": "string",
      "defaultValue": "microtunes-db",
      "metadata": {
        "description": "The name of the new Cosmos database to be created."
      }
    },
    "cosmoscontainerName": {
      "type": "string",
      "defaultValue": "microtunes-container",
      "metadata": {
        "description": "The name of the new container to be created."
      }
    },
    "cosmospendpointName": {
      "type": "string",
      "defaultValue": "cosmosdb-pendpoint",
      "metadata": {
        "description": "The name of the new Cosmos DB account private endpoint."
      }
    },
    "servicebusnamespaceName": {
      "type": "string",
      "defaultValue": "microtunes-namespace",
      "metadata": {
        "description": "The name of the new Azure Service Bus namespace."
      }
    },
    "serviceBusSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "The SKU of the Azure Service Bus namespace."
      }
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "microtunes-law",
      "metadata": {
        "description": "The name of the new Azure Log Analytics workspace."
      }
    },
    "lawsku": {
      "type": "string",
      "defaultValue": "PerGB2018",
      "allowedValues": [
        "Free",
        "Standalone",
        "CapacityReservation",
        "PerGB2018"
      ],
      "metadata": {
        "description": "The SKU of the Azure Log Analytics workspace."
      }
    },
    "registryName": {
      "type": "string",
      "defaultValue": "microtunesacaacr",
      "metadata": {
        "description": "The name of the new Azure Container Registry."
      }
    },
    "acrsku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "The SKU of the Azure Container Registry."
      }
    },
    "aca_cae_name": {
      "defaultValue": "microtunes-aca-cae",
      "type": "String",
      "metadata": {
        "description": "The name of the Azure Container App Environment"
      }
    }
  },
  "variables": {
    "VnetName": "[parameters('VnetName')]",
    "VnetPrefix": "[parameters('VnetPrefix')]",
    "subnetName": "privendpoints",
    "databaseCollation": "SQL_Latin1_General_CP1_CI_AS"
  },
  "resources": [
    {
      "comments": "Virtual Network (VNet)",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('VnetName')]",
      "apiVersion": "2022-07-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('VnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "privateEndpointNetworkPolicies": "Disabled"
            }
          }
        ]
      }
    },
    {
      "comments": "Azure SQL Server",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2022-11-01-preview",
      "name": "[parameters('serverName')]",
      "location": "[parameters('location')]",
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "version": "12.0",
        "minimalTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled",
        "restrictOutboundNetworkAccess": "Disabled"
      }
    },
    {
      "comments": "Azure SQL DB",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2022-11-01-preview",
      "name": "[concat(parameters('serverName'), '/', parameters('databaseName'))]",
      "location": "[resourceGroup().location]",
      "properties": {
        "collation": "[variables('databaseCollation')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
      ]
    },
    {
      "comments": "Azure Redis Cache",
      "type": "Microsoft.Cache/Redis",
      "apiVersion": "2023-05-01-preview",
      "name": "[parameters('cacheName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "capacity": "[parameters('cacheCapacity')]",
          "name": "[parameters('cacheSku')]",
          "family": "[parameters('cacheFamily')]"
        },
        "redisConfiguration": {
          "maxclients": "10000"
        },
        "enableNonSslPort": false,
        "redisVersion": "6.0",
        "minimumTlsVersion": "1.2",
        "shardCount": 1,
        "subnetId": null,
        "staticIp": null,
        "tenantSettings": null,
        "zones": null
      }
    },
    {
      "comments": "Azure Storage Account",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('accountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "comments": "Azure Cosmos DB Account",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[parameters('cosmosdbName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayname": "CosmosDB"
      },
      "properties": {
        "name": "[parameters('cosmosdbName')]",
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        }
      }
    },
     {
      "comments": "Azure Cosmos DB Account Private Endpoint Connection",
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2021-08-01",
      "name": "[parameters('cosmospendpointName')]",
      "location": "[parameters('location')]",
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/VirtualNetworks/subnets', parameters('VnetName'), variables('subnetName'))]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "MyConnection",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosdbName'))]",
              "groupIds": [
                "Sql"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosdbName'))]"
      ]
    },
    {
      "comments": "Azure Service Bus Namespace",
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2022-10-01-preview",
      "name": "[parameters('servicebusnamespaceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('serviceBusSku')]"
      },
      "properties": {
        "zoneRedundant": false
      }
    },
    {
      "comments": "Azure Log Analytics Workspace",
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('lawsku')]"
        }
      }
    },
    {
      "comments": "Azure Container Registry",
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-01-01-preview",
      "name": "[parameters('registryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('acrsku')]"
      },
      "properties": {}
    },
    {
      "comments": "Azure Container Apps Environment",
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2023-04-01-preview",
      "name": "[parameters('aca_cae_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Consumption"
      },
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))).customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')), '2022-10-01').primarySharedKey]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
        ]
    }
  ],
  "outputs": {
    "databaseName": {
      "type": "string",
      "value": "[parameters('databaseName')]"
    },
    "cacheName": {
      "type": "string",
      "value": "[parameters('cacheName')]"
    },
    "cacheHostName": {
      "type": "string",
      "value": "[concat(parameters('cacheName'), '.redis.cache.windows.net')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "storageAccountConnectionString": {
      "type": "string",
      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
    },
    "accountName": {
      "type": "string",
      "value": "[parameters('cosmosdbName')]"
    },
    "cosmosdatabaseName": {
      "type": "string",
      "value": "[parameters('cosmosdatabaseName')]"
    },
    "containerName": {
      "type": "string",
      "value": "[parameters('cosmoscontainerName')]"
    },
    "workspaceId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')), '2022-03-01').customerId]"
    },
    "workspaceKey": {
      "type": "securestring",
      "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName')), '2022-03-01').primarySharedKey]"
    },
    "namespaceConnectionString": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces', parameters('servicebusnamespaceName')), '2017-04-01').primaryConnectionString]"
    },
    "registryLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName')), '2022-07-01-preview').loginServer]"
    },
    "registryUsername": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName')), '2022-07-01-preview').username]"
    },
    "registryPassword": {
      "type": "securestring",
      "value": "[listKeys(resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName')), '2022-07-01-preview').passwords[0].value]"
    }
  }
}